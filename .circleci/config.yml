version: 2.1

orbs:
  windows: circleci/windows@5.0.0
  macos: circleci/macos@2.4.0
  node: circleci/node@5.1.0

commands:
  clone_hosting:
    steps:
      - add_ssh_keys:
          fingerprints:
            - "a4:ea:43:3f:94:59:16:f7:cd:ef:72:16:5a:52:69:a0"
      - run:
          name: Setup git config
          command: git config --global user.name "CircleCI" && git config --global user.email "CircleCI@lumination.com.au"
      - run:
          name: Add github to known hosts
          command: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Add github to known hosts
          command: dir /home/circleci/.ssh
      - run:
          name: Write ssh config file
          command: echo "Host github.com" > ~/.ssh/config && echo "  IdentitiesOnly yes" >> ~/.ssh/config && echo "  IdentityFile /home/circleci/.ssh/id_rsa_a4ea433f945916f7cdef72165a5269a0" >> ~/.ssh/config
      - run:
          name: Clone hosting server
          command: cd ~/ && git clone git@github.com:LuminationDev/LeadMeLabs-QA-Hosting.git

  copy_and_push:
    parameters:
      branch:
        type: string
    steps:
      - run:
          name: Checkout <<parameters.branch>>
          command: cd ~/LeadMeLabs-QA-Hosting && git checkout <<parameters.branch>>
      - run:
          name: Delete old files
          command: rm -rf ~/LeadMeLabs-QA-Hosting/applications/qa-tool
      - run:
          name: Copy built files to git repository
          command: cp -r ./project/dist ~/LeadMeLabs-QA-Hosting/applications/qa-tool
      - run:
          name: Add built files to git
          command: cd ~/LeadMeLabs-QA-Hosting/applications/qa-tool && git add --all
      - run:
          name: Commit
          command: cd ~/LeadMeLabs-QA-Hosting && git commit -m "Update QA tool"
      - run:
          name: Push
          command: cd ~/LeadMeLabs-QA-Hosting && git push

  windows-npm:
    steps:
      - run: choco install wget -y
      - run:
         command: wget https://nodejs.org/dist/v16.17.0/node-v16.17.0-x86.msi -P C:\Users\circleci\Downloads\
         shell: cmd.exe
      - run: MsiExec.exe /i C:\Users\circleci\Downloads\node-v16.17.0-x86.msi /qn
      - run: 
          command: |
              Start-Process powershell -verb runAs -Args "-start GeneralProfile"
              nvm install 16.17.0
              nvm use 16.17.0

  mac-nvm:
    steps:
      - run:
          command: |
            set +e         
            touch $BASH_ENV    
            curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.39.3/install.sh | bash
            echo 'export NVM_DIR="$HOME/.nvm"' >> $BASH_ENV
            echo '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' >> $BASH_ENV
      - run: nvm ls
      - run: nvm install 16.17.0
      - run: nvm use 16.17.0

  build:
    parameters:
      buildType:
        type: string
      command:
        type: string
    steps:
      - checkout
      - when:
          condition:
            and:
              - equal: [m, <<parameters.command>>]
          steps:
            - run: touch ~/project/src/main/static/serviceAccount.json
            - run: echo ${SERVICE_ACCOUNT} > ~/project/src/main/static/serviceAccount.json
      - when:
          condition:
            and:
              - equal: [w, <<parameters.command>>]
          steps:
            - run: echo $env:SERVICE_ACCOUNT > ~/project/src/main/static/temp.json
            - run: Get-Content ~/project/src/main/static/temp.json | Set-Content -Encoding utf8 ~/project/src/main/static/serviceAccount.json
      - run:
          name: "npm install"
          command: "npm install"
      - run:
          name: "build"
          command: "npm run build"
      - run:
          name: "electron-build"
          command: "npm run electron-build -- -<<parameters.command>>"
      - when:
          condition:
            and:
              - equal: [w, <<parameters.command>>]
          steps:
            - run: rm ~/project/dist/builder-debug.yml
            - run: rm ~/project/dist/win-unpacked/leadme-qa.exe
      - when:
          condition:
            and:
              - equal: [m, <<parameters.command>>]
          steps:
            - run: rm ~/project/dist/mac/leadme-qa.app/Contents/Frameworks/"Electron Framework.framework"/Versions/A/"Electron Framework"
            - run: rm ~/project/dist/leadme-qa-*-mac.zip
      - store_artifacts:
          path: ~/project/dist
      - persist_to_workspace:
          root: ~/
          paths:
            - project/dist

jobs:
  build-windows:
    executor:
      name: windows/default
    parameters:
      buildType:
        type: string
    steps:
      - windows-npm
      - build:
          buildType: <<parameters.buildType>>
          command: w
  build-mac:
    macos:
      xcode: 14.2.0
    parameters:
      buildType:
        type: string
    steps:
      - node/install:
          node-version: "16.17.0"
      - run: node --version
      - build:
          buildType: <<parameters.buildType>>
          command: m

  commit-and-push:
    parameters:
      branch:
        type: string
    docker:
      - image: cimg/node:current
    steps:
      - clone_hosting
      - attach_workspace:
          at: ./
      - copy_and_push:
          branch: <<parameters.branch>>

workflows:
  build_release:
    jobs:
      - hold:
          context: LeadMeDeployers
          type: approval
          filters:
            branches:
              only:
                - main
      # - build-mac:
      #     buildType: "Release"
      #     requires:
      #       - hold
      - build-windows:
          buildType: "Release"
          requires:
            - hold
      - commit-and-push:
          branch: "main"
          requires:
            # - build-mac
            - build-windows